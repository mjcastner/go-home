name: GoHome build / deployment workflow
on:
  push:
    branches:
      - main
jobs:
  grpc_server:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - run: gcloud auth configure-docker --quiet
      - uses: actions/checkout@v2
      - uses: bazelbuild/setup-bazelisk@v1
      - name: Mount bazel cache  # Optional
        uses: actions/cache@v2
        with:
          path: "~/.cache/bazel"
          key: bazel
      - name: Build and push server image to GCR
        run: bazel run --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64 //grpc/server:image_push
      - name: Deploy newest image to Cloud run
        run: gcloud run deploy gohome-server --image="gcr.io/${{ secrets.GCP_PROJECT_ID }}/gohome_server:latest" --allow-unauthenticated --platform managed --region ${{ secrets.GCP_REGION }}
  grpc_envoy_proxy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - run: gcloud auth configure-docker --quiet
      - uses: actions/checkout@v2
      - name: Build Envoy Proxy image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/gohome_envoy_proxy:latest .
        working-directory: ./envoy
      - name: Push Build Envoy Proxy image to GCR
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/gohome_envoy_proxy:latest
      - name: Deploy Envoy Proxy to Cloud run
        run: gcloud run deploy gohome-envoy-proxy --image="gcr.io/${{ secrets.GCP_PROJECT_ID }}/gohome_envoy_proxy:latest" --allow-unauthenticated --platform managed --region ${{ secrets.GCP_REGION }}
  flutter_web_client:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - run: gcloud auth configure-docker --quiet
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install protobuf compiler
        run: sudo apt-get update -y && sudo apt-get upgrade -y && sudo apt-get install -y protobuf-compiler
      - name: Install Dart protoc plugin
        run: flutter pub global activate protoc_plugin
      - name: Generate Dart protos
        run: protoc --dart_out=grpc:frontend/lib/ protos/*.proto
      - name: Build Flutter web app
        run: flutter build web --pwa-strategy=none --dart-define GOHOME_HOST=${{ secrets.ENVOY_ENDPOINT_URL }}
        working-directory: ./frontend
      - name: Build Flutter web Docker image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/gohome_flutter_web:latest .
        working-directory: ./frontend
      - name: Push Flutter web Docker image to GCR
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/gohome_flutter_web:latest
      - name: Deploy Flutter web app to Cloud Run
        run: gcloud run deploy gohome-flutter-web --image="gcr.io/${{ secrets.GCP_PROJECT_ID }}/gohome_flutter_web:latest" --port 80 --allow-unauthenticated --platform managed --region ${{ secrets.GCP_REGION }}